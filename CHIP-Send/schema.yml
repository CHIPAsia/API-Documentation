openapi: 3.0.0
servers:
  - description: Sandbox
    url: https://staging-api.chip-in.asia/api/
  - description: Production
    url: https://api.chip-in.asia/api/
info:
  description: |
  
    This is CHIP Send API which enables you to programatically send funds via REST API. It also enables you to register and validate recipient bank accounts.
    
    # Prerequisites
    
    You will need the credentials to proceeed with this integration, which your CHIP Send Account to be created by CHIP Admin before hand. Please contact your CHIP Account Manager to get the credentials, by providing the details below:

      1. Main email
      1. List of approvers (email). If you need 2 approvals, please provide both emails.
      
    # Basic integration flow
    
    4 things to test the whole integration flow:

      1. Call [Accounts API](#/Accounts)
      1. Call [Increase Send Limit API](#/Send%20Limits/send_limits_create)
      1. Call [Add Bank Account API](#/Bank%20Accounts/bank_accounts_create)
      1. Call [Create Send Instruction API](#/Send%20Instructions/send_instructions_create)

     # Endpoints
     
     Make sure to use the correct endpoint depending on the environment you're on.

     1. Staging: [https://staging-api.chip-in.asia/api/](https://staging-api.chip-in.asia/api/)
     1. Production: [https://api.chip-in.asia/api/](https://api.chip-in.asia/api/)

    # Credentials
    
    You will need 2 details for integration with CHIP Send:

    1. **API Key** (used to construct a signing string and Authorization Header)
    1. **API Secret** (used to sign the signing string)
    
    *You will need your **API Key** that you can obtain in the CHIP Send Dashboard. Please use this key as a bearer token in the Authorization header included in every request:* `Authorization: Bearer <API Key>`.
    
    *Since this API is meant for performing high risk task such as sending payments, extra security measure has to be in place. Hence, you also need **API Secret** to sign the request that you made. This keys will never leave your server and shall be stored securely. For every request, you will need to include **epoch** that contains Unix time and **checksum** that contains hash for epoch signed with API Secret in every request header.*
    
    # Epoch Value

    Epoch is a current unix timestamp where it is in seconds and have 10 character length. Example of epoch value is 1689826456. In PHP, epoch value can be retrieved by calling time() function.

    # Checksum Calculation
    
    To generate a checksum, it requires current unix timestamp (`epoch`), `api_key` and `api_secret`.
    
    *Note: epoch time must be less than 30 seconds from the current request and at least greater than current time.*

    Provided an epoch value is `1689826456`, api_key is `e0645c9e-fcf2-4f29-a327-202f7ed3d969` and api_secret is `a118729e-4243-4145-83b3-0b8cb213fe8e`, both epoch and api_key must be concatenated and sign with HMAC SHA512.

    The string that must be prepared is:

    `1689826456e0645c9e-fcf2-4f29-a327-202f7ed3d969`

    The checksum generated is:

    `45bee62dba8087ab1e7e767d92f8d6e26f8bd19ee5fd2fef6386bb9425976498a86ffdbddb7a49919998e993c20626196ea652320f438a9528d2b8c9d19ec266`
    
    Example Postman Pre-Request Script:
    
    ```js
    var epoch = (new Date).getTime();
    var epochSecs = Math.floor( epoch / 1000 );
    pm.collectionVariables.set("epoch", epochSecs);
    var data = epochSecs.toString() + environment["api_key"];
    var hmacDigest = CryptoJS.enc.Hex.stringify(CryptoJS.HmacSHA512(data, environment["api_secret"]));
    pm.collectionVariables.set("checksum", hmacDigest);
    ```
    *Note: JavaScript getTime() is in miliseconds while the unix timestamp is in seconds. Hence, it is required to divide it by 1000.*
    
    Example Ruby code:
    
    ```ruby
    epoch = Time.current.to_i
    application = Application.find_by(slug: "aaa")
    OpenSSL::HMAC.hexdigest OpenSSL::Digest.new('sha512'), application.api_secret, "#{epoch}#{application.api_key}"
    ```
    
    Example PHP code:
    
    ```php
    <?php

    $str = '1689826456e0645c9e-fcf2-4f29-a327-202f7ed3d969';
    $hmac = hash_hmac( 'sha512', $str, 'a118729e-4243-4145-83b3-0b8cb213fe8e' );
    ```
    
    # Approving Chip Send Budget Allocation requests
    
    Each approver will get an email. To approve, approvers must click the Approve button in the email. Once all approvers approve, the balance will be reflected in [Accounts API](#/Accounts) response.

    **Token** used in the Authorization is the **API Key** mentioned in the Credentials section above.

  version: "1.0.1"
  title: CHIP Send API
  termsOfService: https://www.chip-in.asia/terms-of-service
  contact:
    name: CHIP
    url: https://www.chip-in.asia
tags:
  - name: Accounts
    description: This is an API to get CHIP Send account information. Depending on your account agreement, you may only have one account.
  - name: Send Limits
    description: |
      Send Limit records incoming (coverted from collection - transaction_type: in) and outgoing (send to recipient - transaction_type: out) transactions in CHIP Send.

      To be able to send funds to third parties, you must have balance in your CHIP Send Account. Use Increase Chip Send Budget Allocation API to covert settlement (collection) amount to Send Limit.

      Please note in Staging / UAT environment, your convertible collection amount is set to MYR 1,000.00. In Production, it will reflect your actual upcoming settlement amount.
  - name: Bank Accounts
    description: This is an API to manage recipeint bank account details.
  - name: Send Instructions
    description: This is an API to perform a send instructions. This is the main API that you can benefit from CHIP Send.
  - name: Groups
    description: To manage grouping to group company bank account
  - name: Webhooks
    description: To manage webhook events for server-to-server notification
paths:
  "/send/accounts/":
    get:
      operationId: accounts_index
      description: |
        Use this endpoint to know:

        1. Your available settlement (collection) amount that can be converted to CHIP Send Limit;
        1. Current balance;
        1. Send Fee;
        1. Account Verification Fee;
        1. No. of approvals required to convert collection balance to CHIP Send Limit

        Please note that `convertible_balance_from_statement` will return different data depending on when you hit this endpoint. This adds flexibility and time for you to plan out your CHIP Send Budget Allocation requests, without having to send extra information.
        
        For example:

        1. Trigger today at 11.59 PM MYT will return convertible balance from today's collection.
        1. Trigger tomorrow at 12.00 AM MYT will return convertible balance from today's collection.
        1. Trigger tomorrow at 11.59 AM MYT will return convertible balance from today's collection.
        1. Trigger tomorrow at 12.00 PM MYT will return convertible balance from tomorrow's collection.

      summary: Get Accounts
      tags:
        - Accounts
      security:
        - bearerAuth: []
      parameters:
        - name: epoch
          in: header
          description: Unix epoch timestamps
          required: true
          schema:
            allOf:
            - $ref: '#/components/schemas/UnixTimestamp'
        - name: checksum
          in: header
          description: Refer to Checksum Calculation
          required: true
          schema:
            type: string

      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Account'
                  meta:
                    type: object
                    properties:
                      pagination:
                        $ref: '#/components/schemas/MetaPagination'
              example: 
                results:
                  - id: 1
                    status: active
                    currency: MYR
                    settlement_convert_approvals_count: 1
                    send_fee: 1
                    send_fee_type: flat
                    account_verification_fee: 1
                    account_verification_fee_type: flat
                    convertible_balance_from_statement: 1000
                    current_balance: 100
                    created_at: '2023-07-20T08:35:25.389Z'
                    updated_at: '2023-07-20T08:35:25.389Z'
                meta:
                  pagination:
                    current_page: 1
                    prev_page: null
                    next_page: null
                    total_pages: 1
                    total_count: 1
  "/send/send_limits/":
    get:
      operationId: send_limits_index
      description: |
        This is to get the CHIP Send send limit.
      summary: Get Send Limits
      tags:
        - Send Limits
      security:
        - bearerAuth: []
      parameters:
        - name: epoch
          in: header
          description: Unix epoch timestamps
          required: true
          schema:
            allOf:
            - $ref: '#/components/schemas/UnixTimestamp'
        - name: checksum
          in: header
          description: Refer to Checksum Calculation
          required: true
          schema:
            type: string

      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/SendLimit'
                  meta:
                    type: object
                    properties:
                      pagination:
                        $ref: '#/components/schemas/MetaPagination'
              example:
                results:
                  - id: 1
                    currency: MYR
                    fee_type: flat
                    transaction_type: out
                    amount: 0
                    fee: 1
                    net_amount: -1
                    from_settlement: '2023-07-21'
                    status: success
                    approvals_required: 0
                    approvals_received: 0
                    created_at: '2023-07-20T09:00:16.982Z'
                    updated_at: '2023-07-20T09:00:16.982Z'
                meta:
                  pagination:
                    current_page: 1
                    prev_page: null
                    next_page: null
                    total_pages: 1
                    total_count: 1
    post:
      operationId: send_limits_create
      description: |
        This to increase your CHIP Send Budget Allocation by converting upcoming settlement amount. Once triggered, all approvers will receive an email to approve the budget allocation.

        Please note that all CHIP Send Budget Allocation requests must be approved before 12PM MYT the next day. At 12PM MYT (next day), all pending requests will set as expired.
      summary: Increase CHIP Send Budget Allocation
      tags:
        - Send Limits
      security:
        - bearerAuth: []
      parameters:
        - name: epoch
          in: header
          description: Unix epoch timestamps
          required: true
          schema:
            allOf:
            - $ref: '#/components/schemas/UnixTimestamp'
        - name: checksum
          in: header
          description: Refer to Checksum Calculation
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendLimit'

      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendLimit'
              example:
                id: 2
                currency: MYR
                fee_type: flat
                transaction_type: in
                amount: 200
                fee: 0
                net_amount: 200
                from_settlement: '2023-07-21'
                status: pending
                approvals_required: 0
                approvals_received: 0
                created_at: '2023-07-20T10:34:50.503Z'
                updated_at: '2023-07-20T10:34:50.503Z'
  "/send/bank_accounts/":
    get:
      operationId: bank_accounts_index
      description: |
        This is to get list of recipients bank accounts.

      summary: Get Bank Accounts
      tags:
        - Bank Accounts
      security:
        - bearerAuth: []
      parameters:
        - name: epoch
          in: header
          description: Unix epoch timestamps
          required: true
          schema:
            allOf:
            - $ref: '#/components/schemas/UnixTimestamp'
        - name: checksum
          in: header
          description: Refer to Checksum Calculation
          required: true
          schema:
            type: string

        - name: page
          in: query
          description: This to navigate index
          schema:
            type: integer
            format: int64
            example: 1
            description: This to navigate index
        - name: limit
          in: query
          description: Limit records per page. Default 25
          schema:
            type: integer
            format: int64
            default: 25
            description: Limit records per page. Default 25
        - name: status
          in: query
          description: This to filter based on status
          schema:
            example: "verified"
            allOf:
            - $ref: '#/components/schemas/BankAccountStatus'
            description: This to filter based on status
        - name: reference
          in: query
          description: This to filter based on reference
          schema:
            type: string
            example: "abc123"
            description: This to filter based on reference
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/BankAccount'
                  meta:
                    type: object
                    properties:
                      pagination:
                        $ref: '#/components/schemas/MetaPagination'
              example: 
                results:
                  - id: 3
                    status: rejected
                    account_number: '157380111111'
                    bank_code: MBBEMYKL
                    group_id: null
                    name: AHMAD PINTU
                    reference: null
                    created_at: '2023-07-20T08:59:10.766Z'
                    is_debiting_account: false
                    is_crediting_account: false
                    updated_at: '2023-07-20T08:59:10.766Z'
                    deleted_at: null
                    rejection_reason: Non-Actice Status
                  - id: 2
                    status: verified
                    account_number: '162263238637'
                    bank_code: CIBBMYKL
                    group_id: null
                    name: HELMI
                    reference: null
                    created_at: '2023-07-20T08:54:53.427Z'
                    is_debiting_account: false
                    is_crediting_account: false
                    updated_at: '2023-07-20T08:54:53.427Z'
                    deleted_at: null
                    rejection_reason: null
                  - id: 1
                    status: pending
                    account_number: '12224'
                    bank_code: CIBBMYKL
                    group_id: null
                    name: wan
                    reference: null
                    created_at: '2022-12-29T07:44:23.821Z'
                    is_debiting_account: false
                    is_crediting_account: false
                    updated_at: '2022-12-29T07:44:23.821Z'
                    deleted_at: null
                    rejection_reason: null
                meta:
                  pagination:
                    current_page: 1
                    prev_page: null
                    next_page: null
                    total_pages: 1
                    total_count: 3
    post:
      operationId: bank_accounts_create
      description: |
        The ID given in the respone must be stored as it will be used for later process.
      summary: Add Recipient Bank Account
      tags:
        - Bank Accounts
      parameters:
        - name: epoch
          in: header
          description: Unix epoch timestamps
          required: true
          schema:
            allOf:
            - $ref: '#/components/schemas/UnixTimestamp'
        - name: checksum
          in: header
          description: Refer to Checksum Calculation
          required: true
          schema:
            type: string

      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BankAccount'
            example: 
              account_number: '157380111111'
              bank_code: 'MBBEMYKL'
              name: 'Ahmad Pintu'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankAccount'
              example: 
                id: 84
                status: verified
                account_number: '157380111111'
                bank_code: MBBEMYKL
                group_id: null
                name: Ahmad Pintu
                reference: null
                created_at: '2023-07-20T08:59:10.766Z'
                is_debiting_account: false
                is_crediting_account: false
                updated_at: '2023-07-20T08:59:10.766Z'
                deleted_at: null
                rejection_reason: null          
  "/send/bank_accounts/{id}/":
    get:
      operationId: bank_accounts_get
      description: |
        This is for getting a specific recipient bank account details.
      summary: Get Bank Account By ID
      tags:
        - Bank Accounts
      security:
        - bearerAuth: []
      parameters:
        - name: epoch
          in: header
          description: Unix epoch timestamps
          required: true
          schema:
            allOf:
            - $ref: '#/components/schemas/UnixTimestamp'
        - name: checksum
          in: header
          description: Refer to Checksum Calculation
          required: true
          schema:
            type: string

        - name: id
          in: path
          required: true
          schema:
            type: integer
            example: 1
            format: int64
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankAccount'
              example: 
                id: 1
                status: verified
                account_number: '111111111129'
                bank_code: CIBBMYKL
                group_id: null
                name: wan
                reference: null
                created_at: '2022-12-19T15:20:42.285Z'
                is_debiting_account: false
                is_crediting_account: false
                updated_at: '2022-12-19T15:20:42.285Z'
                deleted_at: null
                rejection_reason: null
    delete:
      operationId: bank_accounts_delete
      description: |
        This is for deleting a bank account details to prevent future payment with Create Send Instruction.
      summary: Delete Bank Account
      tags:
        - Bank Accounts
      security:
        - bearerAuth: []
      parameters:
        - name: epoch
          in: header
          description: Unix epoch timestamps
          required: true
          schema:
            allOf:
            - $ref: '#/components/schemas/UnixTimestamp'
        - name: checksum
          in: header
          description: Refer to Checksum Calculation
          required: true
          schema:
            type: string

        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
            example: 84
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankAccount'
              example:
                id: 84
                status: verified
                account_number: '157380111111'
                bank_code: MBBEMYKL
                group_id: null
                name: AHMAD PINTU
                reference: null
                created_at: '2023-07-20T08:59:10.766Z'
                is_debiting_account: false
                is_crediting_account: false
                updated_at: '2023-07-20T10:34:00.541Z'
                deleted_at: '2023-07-20T10:34:00.541Z'
  "/send/send_instructions/":
    get:
      operationId: send_instructions_index
      description: |
        This is for getting a list of previously created send instruction.

        Do noted that this request will get cached where it will only be refreshed every one hour.

      summary: Get Send Instructions
      tags:
        - Send Instructions
      security:
        - bearerAuth: []
      parameters:
        - name: epoch
          in: header
          description: Unix epoch timestamps
          required: true
          schema:
            allOf:
            - $ref: '#/components/schemas/UnixTimestamp'
        - name: checksum
          in: header
          description: Refer to Checksum Calculation
          required: true
          schema:
            type: string

      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      allOf:
                        - $ref: '#/components/schemas/SendInstruction'
                  meta:
                    type: object
                    properties:
                      pagination:
                        $ref: '#/components/schemas/MetaPagination'
              example: 
                results:
                  - id: 49
                    bank_account_id: 39
                    amount: '100.00'
                    state: received
                    email: wan@chip-in.asia
                    description: null
                    reference: null
                    created_at: '2023-03-20T02:04:40.692Z'
                    updated_at: '2023-03-20T02:04:40.692Z'
                  - id: 48
                    bank_account_id: 39
                    amount: '100.00'
                    state: received
                    email: wan@chip-in.asia
                    description: test
                    reference: null
                    created_at: '2023-03-20T02:04:37.218Z'
                    updated_at: '2023-03-20T02:04:37.218Z'
                  - id: 45
                    bank_account_id: 39
                    amount: '100.00'
                    state: received
                    email: wan@chip-in.asia
                    description: test
                    reference: null
                    created_at: '2023-03-17T08:08:09.283Z'
                    updated_at: '2023-03-17T08:08:09.283Z'
                  - id: 44
                    bank_account_id: 39
                    amount: '100.00'
                    state: received
                    email: wan@chip-in.asia
                    description: test
                    reference: null
                    created_at: '2023-03-17T08:07:50.038Z'
                    updated_at: '2023-03-17T08:07:50.038Z'
                meta:
                  pagination:
                    current_page: 1
                    prev_page: null
                    next_page: null
                    total_pages: 1
                    total_count: 2
        '401':
          description: Epoch Timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EpochTimeout'
              example:
                message: 'Epoch Timeout'
                code: 401
                data: {}
    post:
      operationId: send_instructions_create
      description: |
        This is for creating send instruction. A call to this endpiont will deduct your account available balance and credit it to receiver bank account.
      summary: Create Send Instructions
      tags:
        - Send Instructions
      security:
        - bearerAuth: []
      parameters:
        - name: epoch
          in: header
          description: Unix epoch timestamps
          required: true
          schema:
            allOf:
            - $ref: '#/components/schemas/UnixTimestamp'
        - name: checksum
          in: header
          description: Refer to Checksum Calculation
          required: true
          schema:
            type: string

      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendInstruction'
            example: 
              bank_account_id: 1
              amount: '100'
              description: test
              email: email@gmail.com
              reference: f

      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendInstruction'
              example: 
                id: 50
                bank_account_id: 1
                amount: '100.00'
                state: completed
                email: email@gmail.com
                description: test
                reference: f
                created_at: '2023-07-20T10:41:25.190Z'
                updated_at: '2023-07-20T10:41:25.302Z'
        '400':
          description: Balance not enough
          content:
            application/json:
              example:
                message: "Balance not enough. Please increase your CHIP Send Budget Allocation"
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
              example:
                message: "Company Bank Account not found or its still pending verification state"
        '422':
          description: Invalid response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidResponse'
  "/send/send_instructions/{id}/":
    get:
      operationId: send_instructions_get
      description: |
        This is for getting a single send instruction by ID.
      summary: Get Send Instruction By ID
      tags:
        - Send Instructions
      security:
        - bearerAuth: []
      parameters:
        - name: epoch
          in: header
          description: Unix epoch timestamps
          required: true
          schema:
            allOf:
            - $ref: '#/components/schemas/UnixTimestamp'
        - name: checksum
          in: header
          description: Refer to Checksum Calculation
          required: true
          schema:
            type: string

        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
            example: 1
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendInstruction'
              example: 
                id: 3
                bank_account_id: 12
                amount: '100.00'
                state: received
                email: wan@chip-in.asia
                description: test
                reference: null
                created_at: '2022-12-25T04:19:20.620Z'
                updated_at: '2022-12-25T04:19:20.620Z'
    delete:
      operationId: send_instructions_delete
      description: |
        This is to delete send instruction that have been created.

        *Note: Only unprocessed instruction can be deleted. Otherwise, it will fail.*
      summary: Delete Send Instruction
      tags:
        - Send Instructions
      security:
        - bearerAuth: []
      parameters:
        - name: epoch
          in: header
          description: Unix epoch timestamps
          required: true
          schema:
            allOf:
            - $ref: '#/components/schemas/UnixTimestamp'
        - name: checksum
          in: header
          description: Refer to Checksum Calculation
          required: true
          schema:
            type: string

        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
            example: 8
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendInstruction'
              example: 
                id: 50
                bank_account_id: 1
                amount: '100.00'
                state: deleted
                email: email@gmail.com
                description: test
                reference: f
                created_at: '2023-07-20T10:41:25.190Z'
                updated_at: '2023-07-20T10:43:06.047Z'
  "/send/groups/":
    get:
      operationId: groups_index
      description: |
        This to get a list of previously create groups records.

        Do noted that this request will get cached where it will only be refreshed every one hour.

      summary: Get Groups Index
      tags:
        - Groups
      parameters:
        - name: epoch
          in: header
          description: Unix epoch timestamps
          required: true
          schema:
            allOf:
            - $ref: '#/components/schemas/UnixTimestamp'
        - name: checksum
          in: header
          description: Refer to Checksum Calculation
          required: true
          schema:
            type: string
        - name: page
          in: query
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Group'
                    example:
                      - id: 2
                        name: "Second Group"
                        created_at: 1619740800
                        updated_at: 1619740800
                      - id: 3
                        name: "Third Group"
                        created_at: 1619740801
                        updated_at: 1619740801
    post:
      operationId: groups_create
      description: |
        This to create group.
      summary: Create Group
      tags:
        - Groups
      parameters:
        - name: epoch
          in: header
          description: Unix epoch timestamps
          required: true
          schema:
            allOf:
            - $ref: '#/components/schemas/UnixTimestamp'
        - name: checksum
          in: header
          description: Refer to Checksum Calculation
          required: true
          schema:
            type: string
        - name: name
          in: query
          required: true
          schema:
            type: string
            example: First Group
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
              example:
                id: 1
                name: First Group
                created_at: 1619740800
                updated_at: 1619740800
  "/send/groups/{id}/":
    get:
      operationId: groups_get
      description: |
        This to get group.
      summary: Get Group
      tags:
        - Groups
      parameters:
        - name: epoch
          in: header
          description: Unix epoch timestamps
          required: true
          schema:
            allOf:
            - $ref: '#/components/schemas/UnixTimestamp'
        - name: checksum
          in: header
          description: Refer to Checksum Calculation
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: integer
            example: 1
            format: int64
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
              example:
                id: 1
                name: First Group
                created_at: 1619740800
                updated_at: 1619740800
    delete:
      operationId: groups_delete
      description: |
        This to delete group.
      summary: Delete Group
      tags:
        - Groups
      parameters:
        - name: epoch
          in: header
          description: Unix epoch timestamps
          required: true
          schema:
            allOf:
            - $ref: '#/components/schemas/UnixTimestamp'
        - name: checksum
          in: header
          description: Refer to Checksum Calculation
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: integer
            example: 1
            format: int64
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
              example:
                id: 1
                name: First Group
                created_at: 1619740800
                updated_at: 1619740801
    patch:
      operationId: groups_patch
      description: |
        This to patch group.
      summary: Patch Group
      tags:
        - Groups
      parameters:
        - name: epoch
          in: header
          description: Unix epoch timestamps
          required: true
          schema:
            allOf:
            - $ref: '#/components/schemas/UnixTimestamp'
        - name: checksum
          in: header
          description: Refer to Checksum Calculation
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
            example: 1
        - name: name
          in: query
          required: true
          schema:
            type: string
            example: First edited group
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
              example:
                id: 1
                name: First edited group
                created_at: 1619740800
                updated_at: 1619740801
  "/webhooks/":
    get:
      operationId: webhooks_index
      description: |
        This to get a list of previously create webhooks records.

        Do noted that this request will get cached where it will only be refreshed every one hour.

      summary: Get Webhooks Index
      tags:
        - Webhooks
      parameters:
        - name: epoch
          in: header
          description: Unix epoch timestamps
          required: true
          schema:
            allOf:
            - $ref: '#/components/schemas/UnixTimestamp'
        - name: checksum
          in: header
          description: Refer to Checksum Calculation
          required: true
          schema:
            type: string
        - name: name
          in: query
          schema:
            type: string
        - name: email
          in: query
          schema:
            type: string
            format: email
        - name: callback_url
          in: query
          schema:
            allOf:
            - $ref: '#/components/schemas/URL'
        - name: event_hook
          in: query
          schema:
            allOf:
              - $ref: '#/components/schemas/Event'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Webhook'
                    example:
                      - id: 1
                        name: First Webhook
                        public_key: "-----BEGIN PUBLIC KEY-----\nMIIBojANBgkqhkiG9w0BAQEFAAOCAY8AMIIBigKCAYEA6gLlBKxCB5dxPJbinCzl\nhOfKSgQtOWQQBxmnWIkEVUbqhpnqr3xNYiAvDyMUxYUwuzN44eHO+mR9MZWcSx3c\nbXmKa3gsOzR6GdcOxMGaVxvfje+fujCAlCtO1BP+A9/FS3KcPgCYG1wtAPwA5IAf\nHylL3TsUVIJQFBgiBr6N4Bgapr9eloaFfeYIBRsXmxPKAMJivqxYpLh0V3N4ZFd5\nTGqSEAa4b1ULDr6p0sB2L3QikTdsF0zp03zNceKA6fXDOzD0xWtg9buXvyKwePK4\nM2kcnWBNfsWghrdg0fG3O9bmkaS1oEXydrmJfuiI8h6a64J/1nzooi2yLC9D6Ta0\nS63bbuAHymnQtiNuV7Ixp6IoTGFaS88aTiHaP8rdyWV8JTDFx0qeDzyaGWiYGwEF\nmj/buHCEcRhoajbGkPhYA4YEdn4jy1wZhEr2OMdBPM7mPPI0Hy3hcNJVMVVlrpHe\nIltQATpjlNaJMlRPjbcaiW7dsO3BuF9ZOMGksSOnyYm/AgMBAAE=\n-----END PUBLIC KEY-----"
                        callback_url": https://yourwebsite.com/route
                        email: user@example.com
                        event_hooks: [ "company_bank_account_status"]
                        created_at: 16197408
                        updated_at: 16197408
    post:
      operationId: webhooks_create
      description: |
        This to create webhook.
      summary: Create Webhook
      tags:
        - Webhooks
      parameters:
        - name: epoch
          in: header
          description: Unix epoch timestamps
          required: true
          schema:
            allOf:
            - $ref: '#/components/schemas/UnixTimestamp'
        - name: checksum
          in: header
          description: Refer to Checksum Calculation
          required: true
          schema:
            type: string
        - name: name
          in: query
          required: true
          schema:
            type: string
            example: First Webhook
        - name: callback_url
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/URL'
        - name: email
          in: query
          required: true
          schema:
            type: string
            example: email@chip-in.asia
            format: email
        - name: event_hooks
          in: query
          required: true
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Event'
            example:
              - company_bank_account_status
              - company_send_instruction_status
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook'
              example:
                - id: 1
                  name: First Webhook
                  public_key: "-----BEGIN PUBLIC KEY-----\nMIIBojANBgkqhkiG9w0BAQEFAAOCAY8AMIIBigKCAYEA6gLlBKxCB5dxPJbinCzl\nhOfKSgQtOWQQBxmnWIkEVUbqhpnqr3xNYiAvDyMUxYUwuzN44eHO+mR9MZWcSx3c\nbXmKa3gsOzR6GdcOxMGaVxvfje+fujCAlCtO1BP+A9/FS3KcPgCYG1wtAPwA5IAf\nHylL3TsUVIJQFBgiBr6N4Bgapr9eloaFfeYIBRsXmxPKAMJivqxYpLh0V3N4ZFd5\nTGqSEAa4b1ULDr6p0sB2L3QikTdsF0zp03zNceKA6fXDOzD0xWtg9buXvyKwePK4\nM2kcnWBNfsWghrdg0fG3O9bmkaS1oEXydrmJfuiI8h6a64J/1nzooi2yLC9D6Ta0\nS63bbuAHymnQtiNuV7Ixp6IoTGFaS88aTiHaP8rdyWV8JTDFx0qeDzyaGWiYGwEF\nmj/buHCEcRhoajbGkPhYA4YEdn4jy1wZhEr2OMdBPM7mPPI0Hy3hcNJVMVVlrpHe\nIltQATpjlNaJMlRPjbcaiW7dsO3BuF9ZOMGksSOnyYm/AgMBAAE=\n-----END PUBLIC KEY-----"
                  callback_url": https://yourwebsite.com/route
                  email: email@chip-in.asia
                  event_hooks: [ "company_bank_account_status", "company_send_instruction_status"]
                  created_at: 16197408
                  updated_at: 16197408
  "/webhooks/{id}/":
    get:
      operationId: webhooks_get
      description: |
        This to get webhook.
      summary: Get Webhook
      tags:
        - Webhooks
      parameters:
        - name: epoch
          in: header
          description: Unix epoch timestamps
          required: true
          schema:
            allOf:
            - $ref: '#/components/schemas/UnixTimestamp'
        - name: checksum
          in: header
          description: Refer to Checksum Calculation
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
            example: 1
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook'
              example:
                - id: 1
                  name: First Webhook
                  public_key: "-----BEGIN PUBLIC KEY-----\nMIIBojANBgkqhkiG9w0BAQEFAAOCAY8AMIIBigKCAYEA6gLlBKxCB5dxPJbinCzl\nhOfKSgQtOWQQBxmnWIkEVUbqhpnqr3xNYiAvDyMUxYUwuzN44eHO+mR9MZWcSx3c\nbXmKa3gsOzR6GdcOxMGaVxvfje+fujCAlCtO1BP+A9/FS3KcPgCYG1wtAPwA5IAf\nHylL3TsUVIJQFBgiBr6N4Bgapr9eloaFfeYIBRsXmxPKAMJivqxYpLh0V3N4ZFd5\nTGqSEAa4b1ULDr6p0sB2L3QikTdsF0zp03zNceKA6fXDOzD0xWtg9buXvyKwePK4\nM2kcnWBNfsWghrdg0fG3O9bmkaS1oEXydrmJfuiI8h6a64J/1nzooi2yLC9D6Ta0\nS63bbuAHymnQtiNuV7Ixp6IoTGFaS88aTiHaP8rdyWV8JTDFx0qeDzyaGWiYGwEF\nmj/buHCEcRhoajbGkPhYA4YEdn4jy1wZhEr2OMdBPM7mPPI0Hy3hcNJVMVVlrpHe\nIltQATpjlNaJMlRPjbcaiW7dsO3BuF9ZOMGksSOnyYm/AgMBAAE=\n-----END PUBLIC KEY-----"
                  callback_url": https://yourwebsite.com/route
                  email: email@chip-in.asia
                  event_hooks: [ "company_bank_account_status", "company_send_instruction_status"]
                  created_at: 16197408
                  updated_at: 16197408
    delete:
      operationId: webhooks_delete
      description: |
        This to delete webhook.
      summary: Delete Webhook
      tags:
        - Webhooks
      parameters:
        - name: epoch
          in: header
          description: Unix epoch timestamps
          required: true
          schema:
            allOf:
            - $ref: '#/components/schemas/UnixTimestamp'
        - name: checksum
          in: header
          description: Refer to Checksum Calculation
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
            example: 1
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook'
              example:
                - id: 1
                  name: First Webhook
                  public_key: "-----BEGIN PUBLIC KEY-----\nMIIBojANBgkqhkiG9w0BAQEFAAOCAY8AMIIBigKCAYEA6gLlBKxCB5dxPJbinCzl\nhOfKSgQtOWQQBxmnWIkEVUbqhpnqr3xNYiAvDyMUxYUwuzN44eHO+mR9MZWcSx3c\nbXmKa3gsOzR6GdcOxMGaVxvfje+fujCAlCtO1BP+A9/FS3KcPgCYG1wtAPwA5IAf\nHylL3TsUVIJQFBgiBr6N4Bgapr9eloaFfeYIBRsXmxPKAMJivqxYpLh0V3N4ZFd5\nTGqSEAa4b1ULDr6p0sB2L3QikTdsF0zp03zNceKA6fXDOzD0xWtg9buXvyKwePK4\nM2kcnWBNfsWghrdg0fG3O9bmkaS1oEXydrmJfuiI8h6a64J/1nzooi2yLC9D6Ta0\nS63bbuAHymnQtiNuV7Ixp6IoTGFaS88aTiHaP8rdyWV8JTDFx0qeDzyaGWiYGwEF\nmj/buHCEcRhoajbGkPhYA4YEdn4jy1wZhEr2OMdBPM7mPPI0Hy3hcNJVMVVlrpHe\nIltQATpjlNaJMlRPjbcaiW7dsO3BuF9ZOMGksSOnyYm/AgMBAAE=\n-----END PUBLIC KEY-----"
                  callback_url": https://yourwebsite.com/route
                  email: email@chip-in.asia
                  event_hooks: [ "company_bank_account_status", "company_send_instruction_status"]
                  created_at: 16197408
                  updated_at: 16197409
    patch:
      operationId: webhooks_patch
      description: |
        This to patch webhook.
      summary: Patch Webhook
      tags:
        - Webhooks
      parameters:
        - name: epoch
          in: header
          description: Unix epoch timestamps
          required: true
          schema:
            allOf:
            - $ref: '#/components/schemas/UnixTimestamp'
        - name: checksum
          in: header
          description: Refer to Checksum Calculation
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
            example: 1
        - name: name
          in: query
          required: true
          schema:
            type: string
            example: First Webhook Edited
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook'
              example:
                - id: 1
                  name: First Webhook Edited
                  public_key: "-----BEGIN PUBLIC KEY-----\nMIIBojANBgkqhkiG9w0BAQEFAAOCAY8AMIIBigKCAYEA6gLlBKxCB5dxPJbinCzl\nhOfKSgQtOWQQBxmnWIkEVUbqhpnqr3xNYiAvDyMUxYUwuzN44eHO+mR9MZWcSx3c\nbXmKa3gsOzR6GdcOxMGaVxvfje+fujCAlCtO1BP+A9/FS3KcPgCYG1wtAPwA5IAf\nHylL3TsUVIJQFBgiBr6N4Bgapr9eloaFfeYIBRsXmxPKAMJivqxYpLh0V3N4ZFd5\nTGqSEAa4b1ULDr6p0sB2L3QikTdsF0zp03zNceKA6fXDOzD0xWtg9buXvyKwePK4\nM2kcnWBNfsWghrdg0fG3O9bmkaS1oEXydrmJfuiI8h6a64J/1nzooi2yLC9D6Ta0\nS63bbuAHymnQtiNuV7Ixp6IoTGFaS88aTiHaP8rdyWV8JTDFx0qeDzyaGWiYGwEF\nmj/buHCEcRhoajbGkPhYA4YEdn4jy1wZhEr2OMdBPM7mPPI0Hy3hcNJVMVVlrpHe\nIltQATpjlNaJMlRPjbcaiW7dsO3BuF9ZOMGksSOnyYm/AgMBAAE=\n-----END PUBLIC KEY-----"
                  callback_url": https://yourwebsite.com/route
                  email: email@chip-in.asia
                  event_hooks: [ "company_bank_account_status", "company_send_instruction_status"]
                  created_at: 16197408
                  updated_at: 16197410
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
  schemas:
    MetaPagination:
      type: object
      description: This is pagination schema
      properties:
        current_page:
          type: integer
          format: int64
          example: 1
          description: Current page value
        prev_page:
          type: integer
          format: int64
          nullable: true
          example: null
          description: Previous page value
        next_page:
          type: integer
          format: int64
          nullable: true
          example: null
          description: Next page value
        total_pages:
          type: integer
          format: int64
          example: 1
          description: Total available pagination
        total_count:
          type: integer
          format: int64
          example: 1
          description: Total avaialable records
    Account:
      type: object
      description: This is account schema
      properties:
        id:
          type: integer
          format: int64
          example: 1
        status:
          example: "active"
          allOf:
            - $ref: '#/components/schemas/SendAccountStatus'
        currency:
          type: string
          example: "MYR"
          allOf:
            - $ref: '#/components/schemas/SendAccountCurrency'
        settlement_convert_approvals_count:
          type: integer
          example: 1
        send_fee:
          type: number
          example: 1
          description: 1 for RM 1
          pattern: ^[0-9]*\.*[0-9]{0,2}$
        send_fee_type:
          type: string
          example: "flat"
          allOf:
            - $ref: '#/components/schemas/FeeType'
        account_verification_fee:
          type: number
          example: 1
          description: 1 for RM 1
          pattern: ^[0-9]*\.*[0-9]{0,2}$
        account_verification_fee_type:
          type: string
          example: "flat"
          allOf:
            - $ref: '#/components/schemas/FeeType'
        convertible_balance_from_statement:
          type: number
          example: 1000
          description: |
            - 1000 for RM 1,000. 
            - Reset daily to RM 1,000 for staging environment.
            - Reflect realtime for production environment.
          pattern: ^[0-9]*\.*[0-9]{0,2}$
        current_balance:
          type: number
          example: 100
          description: | 
            - 100 for RM 100
            - Available balance to perform Send instructions.
          pattern: ^[0-9]*\.*[0-9]{0,2}$
        created_at:
          readOnly: true
          description: Object creation time in UTC
          type: string
          format: date-time
        updated_at:
          readOnly: true
          description: Object updated time in UTC
          type: string
          format: date-time

    SendLimit:
      type: object
      description: This is send limit schema
      required: 
        - amount
      properties:
        id:
          type: integer
          format: int64
          example: 1
          readOnly: true
        currency:
          type: string
          example: "MYR"
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/SendAccountCurrency'
        fee_type:
          type: string
          example: "flat"
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/FeeType'
        transaction_type:
          type: string
          example: "out"
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/TransactionType'
        amount:
          type: number
          example: 0
          description: 1 for RM 1
          pattern: ^[0-9]*\.*[0-9]{0,2}$
        fee:
          type: number
          example: 1
          description: 1 for RM 1
          pattern: ^[0-9]*\.*[0-9]{0,2}$
          readOnly: true
        net_amount:
          type: number
          example: -1
          description: -1 for -RM 1
          pattern: ^[0-9]*\.*[0-9]{0,2}$
          readOnly: true
        from_settlement:
          type: string
          format: date
          example: "2023-07-21"
          readOnly: true
        status:
          type: string
          example: "success"
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/SendLimitStatus'
        approvals_required:
          type: integer
          example: 0
          description: Approval that are required before processing
          readOnly: true
        approvals_received:
          type: integer
          example: 0
          description: Approval that have been received
          readOnly: true
        created_at:
          readOnly: true
          description: Object creation time in UTC
          type: string
          format: date-time
        updated_at:
          readOnly: true
          description: Object updated time in UTC
          type: string
          format: date-time
    SendInstruction:
      type: object
      description: This is send instructions schema
      required:
        - description
        - reference
        - bank_account_id
        - amount
        - email
      properties:
        id:
          type: integer
          format: int64
          example: 1
          description: This ID must be stored for future reference.
          readOnly: true
        bank_account_id:
          type: integer
          format: int64
          example: 1
          description: ID that have been given in [Add Bank Account](#/Bank%20Accounts/bank_accounts_create)
        amount:
          allOf:
            - $ref: '#/components/schemas/PaymentAmount'
        state:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/SendInstructionState'
        email:
          type: string
          format: email
          example: email@chip-in.asia
        description:
          type: string
          example: Example Description
          maximum: 140
          minimum: 1
          nullable: false
        reference:
          type: string
          maximum: 40
          minimum: 1
          nullable: false
          description: Can be any value.
          example: abc
        created_at:
          readOnly: true
          description: Object creation time in UTC
          type: string
          format: date-time
        updated_at:
          readOnly: true
          description: Object updated time
          type: string
          format: date-time
    BankAccount:
      type: object
      description: This is bank account schema
      required: 
        - account_number
        - bank_code
        - name
      properties:
        id:
          type: integer
          format: int64
          example: 1
          description: The ID given in the respone must be stored as it will be used for later process.
          readOnly: true
        status:
          example: "verified"
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/BankAccountStatus'
        account_number:
          allOf:
            - $ref: '#/components/schemas/BankAccountNumber'
        bank_code:
          allOf:
            - $ref: '#/components/schemas/BankCode'
        group_id:
          type: integer
          format: int64
          nullable: true
          example: null
        name:
          type: string
          minLength: 1
          maxLength: 65535
          example: Ahmad
        reference:
          type: string
          minLength: 1
          maxLength: 65535
          nullable: false
          example: abc
          description: Unique value to prevent multiple submission
        created_at:
          readOnly: true
          description: Object creation time in UTC
          type: string
          format: date-time
        is_debiting_account:
          type: boolean
          example: false
          readOnly: true
        is_crediting_account:
          type: boolean
          example: false
          readOnly: true
        updated_at:
          readOnly: true
          description: Object creation time in UTC
          type: string
          format: date-time
        deleted_at:
          readOnly: true
          description: Object creation time in UTC
          type: string
          format: date-time
        rejection_reason:
          type: string
          nullable: true
          maxLength: 65535
          example: null
          readOnly: true
    Group:
      type: object
      description: This is group schema
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          minimum: 1
          maximum: 256
        created_at:
          readOnly: true
          description: Object creation time in UTC
          type: string
          format: date-time
        updated_at:
          readOnly: true
          description: Object creation time in UTC
          type: string
          format: date-time
    Webhook:
      type: object
      description: This is webhook schema
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          minimum: 1
          maximum: 256
        public_key:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/PublicKey'
        callback_url:
          allOf:
            - $ref: '#/components/schemas/URL'
        email:
          type: string
          format: email
        event_hooks:
          type: array
          minItems: 1
          uniqueItems: true
          description: List of events to trigger webhook callbacks for.
          items:
            $ref: '#/components/schemas/Event'
        created_at:
          readOnly: true
          description: Object creation time in UTC
          type: string
          format: date-time
        updated_at:
          readOnly: true
          description: Object creation time in UTC
          type: string
          format: date-time
    UnixTimestamp:
      type: integer
      description: Unix timestamp (seconds)
      format: Unix timestamp (seconds)
      example: 1619740800
    BankAccountNumber:
      type: string
      minimum: 10
      maximum: 17
      example: 157380112222
      description: The length depends on recipient bank
    BankCode:
      type: string
      example: MBBEMYKL
      description: |
        - `PHBMMYKL`: Affin Bank Berhad
        - `AIBBMYKL`: Affin Islamic Bank Berhad
        - `AGOBMYKL`: AGROBANK / BANK PERTANIAN MALAYSIA BERHAD
        - `MFBBMYKL`: Alliance Bank Malaysia Berhad
        - `ALSRMYK1`: Alliance Islamic Bank Malaysia Berhad
        - `RJHIMYKL`: AL RAJHI BANKING & INVESTMENT CORPORATION (MALAYSIA) BERHAD
        - `ARBKMYKL`: AmBank (M) Berhad
        - `AISLMYKL`: AmIslamic Bank (M) Berhad
        - `BIMBMYKL`: Bank Islam Malaysia Berhad
        - `BKRMMYKL`: Bank Kerjasama Rakyat Malaysia Berhad
        - `BMMBMYKL`: Bank Muamalat (Malaysia) Berhad
        - `BSNAMYK1`: Bank Simpanan Nasional Berhad
        - `CIBBMYKL`: CIMB Bank Berhad
        - `CTBBMYKL`: CIMB Islamic Bank Berhad
        - `CITIMYKL`: Citibank Berhad
        - `HLBBMYKL`: Hong Leong Bank Berhad
        - `HLIBMYKL`: Hong Leong Islamic Bank Berhad
        - `HBMBMYKL`: HSBC Bank Malaysia Berhad
        - `HMABMYKL`: HSBC Amanah Malaysia Berhad
        - `KFHOMYKL`: Kuwait Finance House
        - `MBBEMYKL`: Maybank / Malayan Banking Berhad
        - `MBISMYKL`: Maybank Islamic Berhad
        - `OCBCMYKL`: OCBC Bank (Malaysia) Berhad
        - `OABBMYKL`: OCBC Al-Amin Bank Berhad
        - `PBBEMYKL`: Public Bank Berhad
        - `PIBEMYK1`: Public Islamic Bank Berhad
        - `RHBBMYKL`: RHB Bank Berhad
        - `RHBAMYKL`: RHB Islamic Bank Berhad
        - `SCBLMYKX`: Standard Chartered Bank (Malaysia) Berhad
        - `UOVBMYKL`: United Overseas Bank (Malaysia) Berhad
        - `AFBQMYKL`: MBSB BANK BERHAD
      enum: [PHBMMYKL, AIBBMYKL, BPMBMYKL, MFBBMYKL, ALSRMYK1, RJHIMYKL, ARBKMYKL, AISLMYKL, BIMBMYKL, BKRMMYKL, BMMBMYKL, BSNAMYK1, CIBBMYKL, CTBBMYKL, CITIMYKL, HLBBMYKL, HLIBMYKL, HBMBMYKL, HMABMYKL, KFHOMYKL, MBBEMYKL, MBISMYKL, OCBCMYKL, OABBMYKL, PBBEMYKL, PIBEMYK1, RHBBMYKL, RHBAMYKL, SCBLMYKX, UOVBMYKL, AFBQMYKL]
    PublicKey:
      type: string
      description: PEM-encoded RSA public key for authenticating webhook or callback payloads
      readOnly: true
      example: |-
        -----BEGIN PUBLIC KEY-----
        MIIBojANBgkqhkiG9w0BAQEFAAOCAY8AMIIBigKCAYEA6gLlBKxCB5dxPJbinCzl
        hOfKSgQtOWQQBxmnWIkEVUbqhpnqr3xNYiAvDyMUxYUwuzN44eHO+mR9MZWcSx3c
        bXmKa3gsOzR6GdcOxMGaVxvfje+fujCAlCtO1BP+A9/FS3KcPgCYG1wtAPwA5IAf
        HylL3TsUVIJQFBgiBr6N4Bgapr9eloaFfeYIBRsXmxPKAMJivqxYpLh0V3N4ZFd5
        TGqSEAa4b1ULDr6p0sB2L3QikTdsF0zp03zNceKA6fXDOzD0xWtg9buXvyKwePK4
        M2kcnWBNfsWghrdg0fG3O9bmkaS1oEXydrmJfuiI8h6a64J/1nzooi2yLC9D6Ta0
        S63bbuAHymnQtiNuV7Ixp6IoTGFaS88aTiHaP8rdyWV8JTDFx0qeDzyaGWiYGwEF
        mj/buHCEcRhoajbGkPhYA4YEdn4jy1wZhEr2OMdBPM7mPPI0Hy3hcNJVMVVlrpHe
        IltQATpjlNaJMlRPjbcaiW7dsO3BuF9ZOMGksSOnyYm/AgMBAAE=
        -----END PUBLIC KEY-----
    URL:
      type: string
      format: url
      example: https://yourwebsite.com/route
      maxLength: 500
    Event:
      type: string
      description: |-
        Available event types and when they are emitted:

        `company_bank_account_status`: Emitted when a Company Bank Account status changed. This happens as a result of CHIP processing the company bank account for verification.

        ---

        `company_send_instruction_status`: Emitted when a Company Send Instructions status changed. This happens as a result of CHIP processing the company send instruction with the banks.

        ---
      enum: [company_bank_account_status, company_send_instruction_status]
    SendInstructionState:
      type: string
      enum: [received, enquiring, executing, reviewing, completed, deleted]
      description: |
        - `received`: This indicates that the instruction has been received. But, the processing has not been started.
        - `enquiring`: This inidcates that the instruction is pending verification.
        - `executing`: This inidcates that the instruction is pending execution.
        - `reviewing`: This inidcates that the instruction is requires further attention. Contact account manager for further troubleshooting.
        - `completed`: This inidcates that the instruction has completed execution and the recipient should have received the payment.
        - `deleted`: This inidcates that the instruction has been deleted.
    FeeType:
      type: string
      enum: [flat, percentage]
    TransactionType:
      type: string
      enum: [in, out]
    SendAccountStatus:
      type: string
      enum: [active, pending]
    SendAccountCurrency:
      type: string
      enum: [MYR]
      description: |
        - `MYR`: Ringgit Malaysia (RM)
    SendLimitStatus:
      type: string
      enum: [pending, approved]
      description: Status will be pending until all approver approve the send limit increase request.
    PaymentAmount:
      type: string
      pattern: ^[0-9]{1,}\.{0,1}[0-9]{0,2}$
      description: Amount in floating point with maximum of 2 decimal places.
      example: 12.44
    EpochTimeout:
      type: object
      properties:
        message:
          type: string
          example: "Epoch Timeout"
        code:
          type: integer
          example: 401
        data: {}
    InvalidResponse:
      type: object
      properties:
        message:
          type: array
          items:
            type: string
            enum: ["Email is invalid"]
    NotFoundResponse:
      type: object
      properties:
        message:
          type: array
          items:
            type: string
            enum: ["Record not found", "Company Bank Account not found", "Company Bank Account not found or its still pending verification state"]
    BankAccountStatus:
      type: string
      enum: [pending, verified, rejected]
      description: |
        - `pending`: The bank account is yet to be verified
        - `verified`: Valid bank account
        - `rejected`: Invalid bank account
security:
  - bearerAuth: []
